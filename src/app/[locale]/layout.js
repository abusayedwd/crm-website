 

// // app/layout.js
// import localFont from "next/font/local";
// import "./globals.css";
 
 
// import Head from "next/head";
// import Providers from "@/redux/Provider";
// import Navbar from "../component/pages/Navbar";
// import Footer from "../component/pages/Footer";

// // Define the custom fonts
// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });

// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// // Set metadata for the page
// export const metadata = {
//   title: "CRM Web",
//   description: "Generated by create next app",
// };

// export default async function RootLayout({ children }) {
 
 
//   return (
//     <html lang="en"> {/* Dynamically set the language based on locale */}
//       <Head>
//         <link rel="icon" type="image/png" href="/logo.png" sizes="32x32" />
//       </Head>
      
//       <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
   
//         <Providers>
//           <Navbar />
//           {children}
//           <Footer />
//         </Providers>
      
//       </body>
//     </html>
//   );
// }
 
import 'tailwindcss/tailwind.css';
import { NextIntlClientProvider } from 'next-intl'; // Import the provider to make translations available in the app
import { getMessages } from 'next-intl/server'; // Import function to retrieve translation messages
import { notFound } from 'next/navigation'; // Import notFound function for 404 handling
import { routing } from '@/i18n/routing'; // Import routing configuration for supported locales
import Navbar from '../component/pages/Navbar';
import Footer from '../component/pages/Footer';
import Providers from "@/redux/Provider";

export default async function LocaleLayout({ children, params }) {
  const { locale } = params; 

  
  if (!routing.locales.includes(locale)) {
   
    notFound();
  } 

  const messages = await getMessages();

  return (
    <html lang={locale}>  
      <body>
        {/* Provide the translation messages to the client-side using NextIntlClientProvider */}
        <NextIntlClientProvider messages={messages}>
        <Providers>
         <Navbar />
        {children}
         <Footer />
   </Providers>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}

